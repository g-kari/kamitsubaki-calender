name: Update Event Data

on:
  schedule:
    # Run daily at 9:00 AM JST (0:00 UTC)
    - cron: '0 0 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-events:
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Add timeout for the entire job
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install cheerio node-fetch@2
        npm install
        
    - name: Fetch and update event data
      id: fetch-events
      continue-on-error: true # Don't fail the workflow if fetch fails
      run: |
        timeout 300 node scripts/fetch-events.js || echo "Fetch failed, will use existing data"
        
    - name: Check if events data exists and is valid
      run: |
        if [ ! -f data/events.json ]; then
          echo "No events.json found, creating minimal fallback"
          mkdir -p data
          echo '{"lastUpdated":"'$(date -u +%Y-%m-%dT%H:%M:%S.000Z)'","events":[]}' > data/events.json
        fi
        
        # Validate JSON format
        if ! node -e "JSON.parse(require('fs').readFileSync('data/events.json', 'utf8'))"; then
          echo "Invalid JSON, restoring from git"
          git checkout HEAD -- data/events.json || echo "No previous version available"
        fi
        
    - name: Copy data to public directory
      run: |
        mkdir -p public/data
        cp data/events.json public/data/
        
    - name: Build React application
      run: |
        npm run build
        cp dist/index-react.html index.html
        cp -r dist/assets assets/
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/events.json public/data/events.json index.html assets/
        if ! git diff --staged --quiet; then
          git commit -m "Update event data and rebuild React app - $(date '+%Y-%m-%d %H:%M:%S')"
          # Retry push up to 3 times in case of network issues
          for i in {1..3}; do
            if git push; then
              echo "Push successful on attempt $i"
              break
            else
              echo "Push failed on attempt $i, retrying..."
              sleep 5
            fi
          done
        else
          echo "No changes to commit"
        fi